# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

name: Release

on:
  release:
    types:
      - created
  workflow_dispatch: null

defaults:
  run:
    shell: pwsh

jobs:
  release:
    name: Release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Tag – Get Latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: tag
        uses: jossef/action-latest-release-info@v1.1.0

      - name: Tag – Version Extract
        id: version
        run: |-
          $Version = '${{ steps.tag.outputs.tag_name }}'.Substring(1)
          $VersionElements = $Version.Split('.')
          Write-Output -InputObject "::set-output name=major::$VersionElements[0]"
          Write-Output -InputObject "::set-output name=minor::$VersionElements[1]"
          Write-Output -InputObject "::set-output name=patch::$VersionElements[2]"

      - name: Tag – Version Replace in vss-extension.json
        run: |-
          $FileContent = Get-Content -Path 'PipelinesTasks/PRMetricsV1/vss-extension.json' -Raw
          $FileContent = $FileContent -replace '%MAJOR%', '${{ steps.version.outputs.major }}'
          $FileContent = $FileContent -replace '%MINOR%', '${{ steps.version.outputs.minor }}'
          $FileContent = $FileContent -replace '%PATCH%', '${{ steps.version.outputs.patch }}'
          Set-Content -NoNewline -Path 'PipelinesTasks/PRMetricsV1/vss-extension.json' -Value $FileContent

      - name: Tag – Version Replace in task.json
        run: |-
          $FileContent = Get-Content -Path 'PipelinesTasks/PRMetricsV1/task/task.json' -Raw
          $FileContent = $FileContent -replace '%MAJOR%', '${{ steps.version.outputs.major }}'
          $FileContent = $FileContent -replace '%MINOR%', '${{ steps.version.outputs.minor }}'
          $FileContent = $FileContent -replace '%PATCH%', '${{ steps.version.outputs.patch }}'
          Set-Content -NoNewline -Path 'PipelinesTasks/PRMetricsV1/task/task.json' -Value $FileContent

      - name: MSBuild – Install
        uses: microsoft/setup-msbuild@v1.0.2

      - name: MSBuild – Run
        run: msbuild

      - name: Install TFX CLI
        run: npm install -g tfx-cli

      - name: PRMetrics Package – Create
        run: |-
          Set-Location -Path '${{ github.workspace }}/Release/PipelinesTasks/PRMetricsV1'
          tfx extension create --manifest-globs vss-extension.json --output-path ms-omex.prmetrics.vsix

      - name: PRMetrics Package – Publish
        run: >-
          tfx extension publish
          --manifest-globs ${{ github.workspace }}/Release/PipelinesTasks/PRMetricsV1/vss-extension.json
          --vsix ${{ github.workspace }/Release/PipelinesTasks/PRMetricsV1/ms-omex.prmetrics.vsix
          --token ${{ secrets.VS_PAT }}
